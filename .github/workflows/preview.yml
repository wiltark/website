name: check build

on:
  issue_comment:
    types: [created, edited]

jobs:
  update-comment:
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '/test') && (github.event.comment.author_association == 'MEMBER' || github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'COLLABORATOR') }}
    steps:
      - name: comment
        id: create-or-update-comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Waiting for deployment to finish
          reactions: hourglass

      - id: get-comment-id
        run: |
          echo "COMMENT_ID=${{ steps.create-or-update-comment.outputs.comment-id }}" >> $GITHUB_ENV
          echo ${{github.event.comment.author_association}}

      - name: Checkout PR
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.repository.full_name }}

      - uses: actions-ecosystem/action-remove-labels@v1
        with:
          labels: |
            Build Pending
            Build Failed
            Build Passed

      - name: Install and Build
        if: github.event.action != 'closed'
        run: |
          npm install --legacy-peer-deps
          npm install react-dom --legacy-peer-deps
          npm run build
        continue-on-error: true

      - name: Check Build Status
        if: always()
        id: check-build-status
        run: |
          if [ $? -eq 0 ]; then
            echo "Build succeeded."
            echo "Updating comment..."
            echo "BUILD_STATUS=succeeded" >> $GITHUB_ENV
            echo "COMMENT_BODY=Build succeeded." >> $GITHUB_ENV
            echo "LABEL=Build Passed" >> $GITHUB_ENV
          else
            echo "Build failed."
            echo "Updating comment..."
            echo "COMMENT_BODY=Build failed." >> $GITHUB_ENV
            echo "LABEL=Build Failed" >> $GITHUB_ENV
          fi

      - name: Update Comment
        if: always()
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ env.COMMENT_ID }}
          body: ${{ env.COMMENT_BODY }}
          edit-mode: 'replace'
          reactions-edit-mode: 'replace'
          reactions: ''
          
      - uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: ${{ env.LABEL }}

      - name: Review
        if: ${{ env.BUILD_STATUS == 'succeeded' }}
        uses: hmarr/auto-approve-action@v4
        with: 
          pull-request-number: ${{ github.event.issue.number }}
